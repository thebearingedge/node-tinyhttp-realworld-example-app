// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId    Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  follows   Follow[]
  profile   Profile?
  favorites Favorite[]
}

model Follow {
  followId  Int     @id @default(autoincrement())
  userId    Int
  profileId Int
  user      User    @relation(fields: [userId], references: [userId])
  profile   Profile @relation(fields: [profileId], references: [userId])

  @@unique([profileId, userId])
}

model Profile {
  userId    Int       @unique
  username  String    @unique
  bio       String?
  image     String?
  user      User      @relation(fields: userId, references: userId)
  followers Follow[]
  articles  Article[]
  comments  Comment[]
}

model Favorite {
  userId    Int
  articleId Int
  user      User    @relation(fields: userId, references: userId)
  article   Article @relation(fields: articleId, references: articleId)

  @@id([userId, articleId])
}

model Article {
  articleId   Int          @id @default(autoincrement())
  userId      Int
  slug        String       @unique
  title       String
  description String
  body        String
  createdAt   DateTime     @default(dbgenerated("now()")) @db.Timestamptz(6)
  updatedAt   DateTime     @default(dbgenerated("now()")) @db.Timestamptz(6)
  author      Profile      @relation(fields: userId, references: userId)
  comments    Comment[]
  favoritedBy Favorite[]
  articleTags ArticleTag[]
}

model Tag {
  value       String       @id
  articleTags ArticleTag[]
}

model ArticleTag {
  articleId Int
  tagValue  String
  article   Article @relation(fields: articleId, references: articleId)
  tag       Tag     @relation(fields: tagValue, references: value)

  @@id([articleId, tagValue])
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  body      String
  articleId Int
  createdAt DateTime @default(dbgenerated("now()")) @db.Timestamptz(6)
  updatedAt DateTime @default(dbgenerated("now()")) @db.Timestamptz(6)
  author    Profile  @relation(fields: userId, references: userId)
  article   Article  @relation(fields: articleId, references: articleId)
}
